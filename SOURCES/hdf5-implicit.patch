diff -up hdf5-1.8.18/configure.ac.implicit hdf5-1.8.18/configure.ac
--- hdf5-1.8.18/configure.ac.implicit	2016-12-05 20:44:42.267653275 -0700
+++ hdf5-1.8.18/configure.ac	2016-12-05 20:52:16.666921290 -0700
@@ -1316,9 +1316,9 @@ if test "x$HAVE_SZLIB" = "xyes" -a "x$HA
         {       
                 /* SZ_encoder_enabled returns 1 if encoder is present */
             if(SZ_encoder_enabled() == 1)
-                exit(0);
+                return(0);
             else
-                exit(1);
+                return(1);
         }
         ], [hdf5_cv_szlib_can_encode=yes], [hdf5_cv_szlib_can_encode=no],)])
     
@@ -1662,7 +1662,7 @@ for hdf5_cv_printf_ll in l ll L q unknow
 	char *s = malloc(128);
 	long long x = (long long)1048576 * (long long)1048576;
 	sprintf(s,"%${hdf5_cv_printf_ll}d",x);
-	exit(strcmp(s,"1099511627776"));
+	return(strcmp(s,"1099511627776"));
      }
    ], [break],,[continue])
 done])
@@ -1690,7 +1690,7 @@ AC_CACHE_VAL([hdf5_cv_system_scope_threa
 
       pthread_attr_init(&attribute);
       ret=pthread_attr_setscope(&attribute, PTHREAD_SCOPE_SYSTEM);
-      exit(ret==0 ? 0 : 1);
+      return(ret==0 ? 0 : 1);
     }
   ], [hdf5_cv_system_scope_threads=yes], [hdf5_cv_system_scope_threads=no],)])
 
@@ -2308,7 +2308,7 @@ else
                             ret = 0;
                     }    
                 }   
-                exit(ret);
+                return(ret);
         ]])]
     , [hdf5_cv_ldouble_to_long_special=yes], [hdf5_cv_ldouble_to_long_special=no],)])
 fi
@@ -2396,7 +2396,7 @@ else
                         s[12]==0x00 && s[13]==0x00 && s[14]==0x00 && s[15]==0x00)
                         ret = 0;
                 }        
-                exit(ret);
+                return(ret);
         ]])]
     , [hdf5_cv_long_to_ldouble_special=yes], [hdf5_cv_long_to_ldouble_special=no],)])
 fi
@@ -2429,6 +2429,7 @@ if test ${ac_cv_sizeof_long_double} = 0;
 else
    AC_CACHE_VAL([hdf5_cv_ldouble_to_llong_accurate],
         [AC_TRY_RUN([
+        #include <string.h>
         int main(void)
         {
             long double         ld = 20041683600089727.779961L;
@@ -2463,7 +2464,7 @@ else
                 }    
             }    
     done:
-            exit(ret);
+            return(ret);
         }
         ], [hdf5_cv_ldouble_to_llong_accurate=yes], [hdf5_cv_ldouble_to_llong_accurate=no],)])
 fi
@@ -2494,6 +2495,7 @@ if test ${ac_cv_sizeof_long_double} = 0;
 else
    AC_CACHE_VAL([hdf5_cv_llong_to_ldouble_correct],
         [AC_TRY_RUN([
+        #include <string.h>
         int main(void)
         {
             long double         ld;
@@ -2532,7 +2534,7 @@ else
                     ret = 1;
             }        
     done:
-            exit(ret);
+            return(ret);
         }
         ], [hdf5_cv_llong_to_ldouble_correct=yes], [hdf5_cv_llong_to_ldouble_correct=no],)])
 fi
diff -up hdf5-1.8.18/src/H5Dio.c.implicit hdf5-1.8.18/src/H5Dio.c
--- hdf5-1.8.18/src/H5Dio.c.implicit	2016-11-04 12:41:06.000000000 -0600
+++ hdf5-1.8.18/src/H5Dio.c	2016-12-05 20:44:42.259653236 -0700
@@ -30,6 +30,7 @@
 #include "H5Iprivate.h"		/* IDs			  		*/
 #include "H5MMprivate.h"        /* Memory management                    */
 #include "H5Sprivate.h"		/* Dataspace			  	*/
+#include "H5Tprivate.h"          /* Datatype functions          */
 
 #ifdef H5_HAVE_PARALLEL
 /* Remove this if H5R_DATASET_REGION is no longer used in this file */
diff -up hdf5-1.8.18/src/H5Tprivate.h.implicit hdf5-1.8.18/src/H5Tprivate.h
--- hdf5-1.8.18/src/H5Tprivate.h.implicit	2016-11-04 12:41:07.000000000 -0600
+++ hdf5-1.8.18/src/H5Tprivate.h	2016-12-05 20:44:42.259653236 -0700
@@ -137,6 +137,7 @@ H5_DLL htri_t H5T_is_sensible(const H5T_
 H5_DLL uint32_t H5T_hash(H5F_t * file, const H5T_t *dt);
 H5_DLL herr_t H5T_set_latest_version(H5T_t *dt);
 H5_DLL herr_t H5T_patch_file(H5T_t *dt, H5F_t *f);
+H5_DLL herr_t H5T_patch_vlen_file(H5T_t *dt, H5F_t *f);
 H5_DLL htri_t H5T_is_variable_str(const H5T_t *dt);
 
 /* Reference specific functions */
diff -up hdf5-1.8.18/test/cache_common.h.implicit hdf5-1.8.18/test/cache_common.h
--- hdf5-1.8.18/test/cache_common.h.implicit	2016-11-04 12:41:07.000000000 -0600
+++ hdf5-1.8.18/test/cache_common.h	2016-12-05 20:44:42.259653236 -0700
@@ -684,6 +684,9 @@ void verify_unprotected(void);
 
 /*** H5AC level utility functions ***/
 
+hbool_t resize_configs_are_equal(const H5C_auto_size_ctl_t *a,
+    const H5C_auto_size_ctl_t *b, hbool_t compare_init);
+
 void check_and_validate_cache_hit_rate(hid_t file_id,
                                        double * hit_rate_ptr,
                                        hbool_t dump_data,
diff -up hdf5-1.8.18/testpar/t_span_tree.c.implicit hdf5-1.8.18/testpar/t_span_tree.c
--- hdf5-1.8.18/testpar/t_span_tree.c.implicit	2016-11-04 12:41:07.000000000 -0600
+++ hdf5-1.8.18/testpar/t_span_tree.c	2016-12-05 20:44:42.260653241 -0700
@@ -34,9 +34,15 @@
 
  */
 
+#define H5S_PACKAGE             /*suppress error about including H5Spkg   */
+
+/* Define this macro to indicate that the testing APIs should be available */
+#define H5S_TESTING
+
 #include "hdf5.h"
 #include "H5private.h"
 #include "testphdf5.h"
+#include "H5Spkg.h"
 
 
 static void coll_write_test(int chunk_factor);
diff -up hdf5-1.8.18/tools/perform/perf.c.implicit hdf5-1.8.18/tools/perform/perf.c
--- hdf5-1.8.18/tools/perform/perf.c.implicit	2016-11-04 12:41:07.000000000 -0600
+++ hdf5-1.8.18/tools/perform/perf.c	2016-12-05 20:44:42.260653241 -0700
@@ -24,6 +24,7 @@
 
 #include "hdf5.h"
 #include "H5private.h"
+#include "h5test.h"
 
 #ifdef H5_HAVE_PARALLEL
 
